#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Jobs.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FastJobs")]
	public partial class dbFastJobsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertADMIN(ADMIN instance);
    partial void UpdateADMIN(ADMIN instance);
    partial void DeleteADMIN(ADMIN instance);
    partial void InsertCareer(Career instance);
    partial void UpdateCareer(Career instance);
    partial void DeleteCareer(Career instance);
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertCV(CV instance);
    partial void UpdateCV(CV instance);
    partial void DeleteCV(CV instance);
    partial void InsertEmployer(Employer instance);
    partial void UpdateEmployer(Employer instance);
    partial void DeleteEmployer(Employer instance);
    partial void InsertEmployerCreatedCompany(EmployerCreatedCompany instance);
    partial void UpdateEmployerCreatedCompany(EmployerCreatedCompany instance);
    partial void DeleteEmployerCreatedCompany(EmployerCreatedCompany instance);
    partial void InsertEmployerCreatedJob(EmployerCreatedJob instance);
    partial void UpdateEmployerCreatedJob(EmployerCreatedJob instance);
    partial void DeleteEmployerCreatedJob(EmployerCreatedJob instance);
    partial void InsertExperience(Experience instance);
    partial void UpdateExperience(Experience instance);
    partial void DeleteExperience(Experience instance);
    partial void InsertJob(Job instance);
    partial void UpdateJob(Job instance);
    partial void DeleteJob(Job instance);
    partial void InsertJobCategory(JobCategory instance);
    partial void UpdateJobCategory(JobCategory instance);
    partial void DeleteJobCategory(JobCategory instance);
    partial void InsertRecument(Recument instance);
    partial void UpdateRecument(Recument instance);
    partial void DeleteRecument(Recument instance);
    partial void InsertSkill(Skill instance);
    partial void UpdateSkill(Skill instance);
    partial void DeleteSkill(Skill instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public dbFastJobsDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["FastJobsConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbFastJobsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbFastJobsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbFastJobsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbFastJobsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ADMIN> ADMINs
		{
			get
			{
				return this.GetTable<ADMIN>();
			}
		}
		
		public System.Data.Linq.Table<Career> Careers
		{
			get
			{
				return this.GetTable<Career>();
			}
		}
		
		public System.Data.Linq.Table<Company> Companies
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<CV> CVs
		{
			get
			{
				return this.GetTable<CV>();
			}
		}
		
		public System.Data.Linq.Table<Employer> Employers
		{
			get
			{
				return this.GetTable<Employer>();
			}
		}
		
		public System.Data.Linq.Table<EmployerCreatedCompany> EmployerCreatedCompanies
		{
			get
			{
				return this.GetTable<EmployerCreatedCompany>();
			}
		}
		
		public System.Data.Linq.Table<EmployerCreatedJob> EmployerCreatedJobs
		{
			get
			{
				return this.GetTable<EmployerCreatedJob>();
			}
		}
		
		public System.Data.Linq.Table<Experience> Experiences
		{
			get
			{
				return this.GetTable<Experience>();
			}
		}
		
		public System.Data.Linq.Table<Job> Jobs
		{
			get
			{
				return this.GetTable<Job>();
			}
		}
		
		public System.Data.Linq.Table<JobCategory> JobCategories
		{
			get
			{
				return this.GetTable<JobCategory>();
			}
		}
		
		public System.Data.Linq.Table<Recument> Recuments
		{
			get
			{
				return this.GetTable<Recument>();
			}
		}
		
		public System.Data.Linq.Table<Skill> Skills
		{
			get
			{
				return this.GetTable<Skill>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADMIN")]
	public partial class ADMIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UserName;
		
		private string _Password;
		
		private string _Name;
		
		private string _Address;
		
		private string _Email;
		
		private string _Phone;
		
		private int _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnRoleChanging(int value);
    partial void OnRoleChanged();
    #endregion
		
		public ADMIN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="Int NOT NULL")]
		public int Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Career")]
	public partial class Career : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _Descriptions;
		
		private System.Nullable<bool> _Status;
		
		private System.Nullable<int> _JobCount;
		
		private EntitySet<Job> _Jobs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnDescriptionsChanging(string value);
    partial void OnDescriptionsChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnJobCountChanging(System.Nullable<int> value);
    partial void OnJobCountChanged();
    #endregion
		
		public Career()
		{
			this._Jobs = new EntitySet<Job>(new Action<Job>(this.attach_Jobs), new Action<Job>(this.detach_Jobs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descriptions", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Descriptions
		{
			get
			{
				return this._Descriptions;
			}
			set
			{
				if ((this._Descriptions != value))
				{
					this.OnDescriptionsChanging(value);
					this.SendPropertyChanging();
					this._Descriptions = value;
					this.SendPropertyChanged("Descriptions");
					this.OnDescriptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCount", DbType="Int")]
		public System.Nullable<int> JobCount
		{
			get
			{
				return this._JobCount;
			}
			set
			{
				if ((this._JobCount != value))
				{
					this.OnJobCountChanging(value);
					this.SendPropertyChanging();
					this._JobCount = value;
					this.SendPropertyChanged("JobCount");
					this.OnJobCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Career_Job", Storage="_Jobs", ThisKey="ID", OtherKey="CareerID")]
		public EntitySet<Job> Jobs
		{
			get
			{
				return this._Jobs;
			}
			set
			{
				this._Jobs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.Career = this;
		}
		
		private void detach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.Career = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _LinkPage;
		
		private string _Description;
		
		private string _Avatar;
		
		private string _Background;
		
		private System.Nullable<int> _Employees;
		
		private string _Location;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<bool> _Status;
		
		private System.Nullable<int> _ViewCount;
		
		private EntitySet<Employer> _Employers;
		
		private EntitySet<EmployerCreatedCompany> _EmployerCreatedCompanies;
		
		private EntitySet<Job> _Jobs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLinkPageChanging(string value);
    partial void OnLinkPageChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAvatarChanging(string value);
    partial void OnAvatarChanged();
    partial void OnBackgroundChanging(string value);
    partial void OnBackgroundChanged();
    partial void OnEmployeesChanging(System.Nullable<int> value);
    partial void OnEmployeesChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnViewCountChanging(System.Nullable<int> value);
    partial void OnViewCountChanged();
    #endregion
		
		public Company()
		{
			this._Employers = new EntitySet<Employer>(new Action<Employer>(this.attach_Employers), new Action<Employer>(this.detach_Employers));
			this._EmployerCreatedCompanies = new EntitySet<EmployerCreatedCompany>(new Action<EmployerCreatedCompany>(this.attach_EmployerCreatedCompanies), new Action<EmployerCreatedCompany>(this.detach_EmployerCreatedCompanies));
			this._Jobs = new EntitySet<Job>(new Action<Job>(this.attach_Jobs), new Action<Job>(this.detach_Jobs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkPage", DbType="NVarChar(250)")]
		public string LinkPage
		{
			get
			{
				return this._LinkPage;
			}
			set
			{
				if ((this._LinkPage != value))
				{
					this.OnLinkPageChanging(value);
					this.SendPropertyChanging();
					this._LinkPage = value;
					this.SendPropertyChanged("LinkPage");
					this.OnLinkPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="NVarChar(250)")]
		public string Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Background", DbType="NVarChar(250)")]
		public string Background
		{
			get
			{
				return this._Background;
			}
			set
			{
				if ((this._Background != value))
				{
					this.OnBackgroundChanging(value);
					this.SendPropertyChanging();
					this._Background = value;
					this.SendPropertyChanged("Background");
					this.OnBackgroundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employees", DbType="Int")]
		public System.Nullable<int> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				if ((this._Employees != value))
				{
					this.OnEmployeesChanging(value);
					this.SendPropertyChanging();
					this._Employees = value;
					this.SendPropertyChanged("Employees");
					this.OnEmployeesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(250)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewCount", DbType="Int")]
		public System.Nullable<int> ViewCount
		{
			get
			{
				return this._ViewCount;
			}
			set
			{
				if ((this._ViewCount != value))
				{
					this.OnViewCountChanging(value);
					this.SendPropertyChanging();
					this._ViewCount = value;
					this.SendPropertyChanged("ViewCount");
					this.OnViewCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Employer", Storage="_Employers", ThisKey="ID", OtherKey="IDCompany")]
		public EntitySet<Employer> Employers
		{
			get
			{
				return this._Employers;
			}
			set
			{
				this._Employers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_EmployerCreatedCompany", Storage="_EmployerCreatedCompanies", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<EmployerCreatedCompany> EmployerCreatedCompanies
		{
			get
			{
				return this._EmployerCreatedCompanies;
			}
			set
			{
				this._EmployerCreatedCompanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Job", Storage="_Jobs", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<Job> Jobs
		{
			get
			{
				return this._Jobs;
			}
			set
			{
				this._Jobs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employers(Employer entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Employers(Employer entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_EmployerCreatedCompanies(EmployerCreatedCompany entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_EmployerCreatedCompanies(EmployerCreatedCompany entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CV")]
	public partial class CV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDUser;
		
		private string _AboutMe;
		
		private string _YourLocation;
		
		private string _Gmail;
		
		private string _Phone;
		
		private string _FaceBook;
		
		private string _Avatar;
		
		private string _Name;
		
		private string _EducationName;
		
		private string _EducationTime;
		
		private string _EducationName2;
		
		private string _EducationTime2;
		
		private string _WorkExperienceInfor1;
		
		private string _WorkExperienceInfor2;
		
		private string _WorkExperienceTime1;
		
		private string _WorkExperienceTime2;
		
		private string _Skill1;
		
		private string _Skill2;
		
		private EntitySet<Recument> _Recuments;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDUserChanging(int value);
    partial void OnIDUserChanged();
    partial void OnAboutMeChanging(string value);
    partial void OnAboutMeChanged();
    partial void OnYourLocationChanging(string value);
    partial void OnYourLocationChanged();
    partial void OnGmailChanging(string value);
    partial void OnGmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaceBookChanging(string value);
    partial void OnFaceBookChanged();
    partial void OnAvatarChanging(string value);
    partial void OnAvatarChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEducationNameChanging(string value);
    partial void OnEducationNameChanged();
    partial void OnEducationTimeChanging(string value);
    partial void OnEducationTimeChanged();
    partial void OnEducationName2Changing(string value);
    partial void OnEducationName2Changed();
    partial void OnEducationTime2Changing(string value);
    partial void OnEducationTime2Changed();
    partial void OnWorkExperienceInfor1Changing(string value);
    partial void OnWorkExperienceInfor1Changed();
    partial void OnWorkExperienceInfor2Changing(string value);
    partial void OnWorkExperienceInfor2Changed();
    partial void OnWorkExperienceTime1Changing(string value);
    partial void OnWorkExperienceTime1Changed();
    partial void OnWorkExperienceTime2Changing(string value);
    partial void OnWorkExperienceTime2Changed();
    partial void OnSkill1Changing(string value);
    partial void OnSkill1Changed();
    partial void OnSkill2Changing(string value);
    partial void OnSkill2Changed();
    #endregion
		
		public CV()
		{
			this._Recuments = new EntitySet<Recument>(new Action<Recument>(this.attach_Recuments), new Action<Recument>(this.detach_Recuments));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUser", DbType="Int NOT NULL")]
		public int IDUser
		{
			get
			{
				return this._IDUser;
			}
			set
			{
				if ((this._IDUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDUserChanging(value);
					this.SendPropertyChanging();
					this._IDUser = value;
					this.SendPropertyChanged("IDUser");
					this.OnIDUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AboutMe", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string AboutMe
		{
			get
			{
				return this._AboutMe;
			}
			set
			{
				if ((this._AboutMe != value))
				{
					this.OnAboutMeChanging(value);
					this.SendPropertyChanging();
					this._AboutMe = value;
					this.SendPropertyChanged("AboutMe");
					this.OnAboutMeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YourLocation", DbType="NVarChar(250)")]
		public string YourLocation
		{
			get
			{
				return this._YourLocation;
			}
			set
			{
				if ((this._YourLocation != value))
				{
					this.OnYourLocationChanging(value);
					this.SendPropertyChanging();
					this._YourLocation = value;
					this.SendPropertyChanged("YourLocation");
					this.OnYourLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gmail", DbType="NVarChar(50)")]
		public string Gmail
		{
			get
			{
				return this._Gmail;
			}
			set
			{
				if ((this._Gmail != value))
				{
					this.OnGmailChanging(value);
					this.SendPropertyChanging();
					this._Gmail = value;
					this.SendPropertyChanged("Gmail");
					this.OnGmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaceBook", DbType="NVarChar(50)")]
		public string FaceBook
		{
			get
			{
				return this._FaceBook;
			}
			set
			{
				if ((this._FaceBook != value))
				{
					this.OnFaceBookChanging(value);
					this.SendPropertyChanging();
					this._FaceBook = value;
					this.SendPropertyChanged("FaceBook");
					this.OnFaceBookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="NVarChar(100)")]
		public string Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationName", DbType="NVarChar(250)")]
		public string EducationName
		{
			get
			{
				return this._EducationName;
			}
			set
			{
				if ((this._EducationName != value))
				{
					this.OnEducationNameChanging(value);
					this.SendPropertyChanging();
					this._EducationName = value;
					this.SendPropertyChanged("EducationName");
					this.OnEducationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationTime", DbType="NVarChar(250)")]
		public string EducationTime
		{
			get
			{
				return this._EducationTime;
			}
			set
			{
				if ((this._EducationTime != value))
				{
					this.OnEducationTimeChanging(value);
					this.SendPropertyChanging();
					this._EducationTime = value;
					this.SendPropertyChanged("EducationTime");
					this.OnEducationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationName2", DbType="NVarChar(250)")]
		public string EducationName2
		{
			get
			{
				return this._EducationName2;
			}
			set
			{
				if ((this._EducationName2 != value))
				{
					this.OnEducationName2Changing(value);
					this.SendPropertyChanging();
					this._EducationName2 = value;
					this.SendPropertyChanged("EducationName2");
					this.OnEducationName2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationTime2", DbType="NVarChar(250)")]
		public string EducationTime2
		{
			get
			{
				return this._EducationTime2;
			}
			set
			{
				if ((this._EducationTime2 != value))
				{
					this.OnEducationTime2Changing(value);
					this.SendPropertyChanging();
					this._EducationTime2 = value;
					this.SendPropertyChanged("EducationTime2");
					this.OnEducationTime2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkExperienceInfor1", DbType="NVarChar(250)")]
		public string WorkExperienceInfor1
		{
			get
			{
				return this._WorkExperienceInfor1;
			}
			set
			{
				if ((this._WorkExperienceInfor1 != value))
				{
					this.OnWorkExperienceInfor1Changing(value);
					this.SendPropertyChanging();
					this._WorkExperienceInfor1 = value;
					this.SendPropertyChanged("WorkExperienceInfor1");
					this.OnWorkExperienceInfor1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkExperienceInfor2", DbType="NVarChar(250)")]
		public string WorkExperienceInfor2
		{
			get
			{
				return this._WorkExperienceInfor2;
			}
			set
			{
				if ((this._WorkExperienceInfor2 != value))
				{
					this.OnWorkExperienceInfor2Changing(value);
					this.SendPropertyChanging();
					this._WorkExperienceInfor2 = value;
					this.SendPropertyChanged("WorkExperienceInfor2");
					this.OnWorkExperienceInfor2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkExperienceTime1", DbType="NVarChar(250)")]
		public string WorkExperienceTime1
		{
			get
			{
				return this._WorkExperienceTime1;
			}
			set
			{
				if ((this._WorkExperienceTime1 != value))
				{
					this.OnWorkExperienceTime1Changing(value);
					this.SendPropertyChanging();
					this._WorkExperienceTime1 = value;
					this.SendPropertyChanged("WorkExperienceTime1");
					this.OnWorkExperienceTime1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkExperienceTime2", DbType="NVarChar(250)")]
		public string WorkExperienceTime2
		{
			get
			{
				return this._WorkExperienceTime2;
			}
			set
			{
				if ((this._WorkExperienceTime2 != value))
				{
					this.OnWorkExperienceTime2Changing(value);
					this.SendPropertyChanging();
					this._WorkExperienceTime2 = value;
					this.SendPropertyChanged("WorkExperienceTime2");
					this.OnWorkExperienceTime2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skill1", DbType="NVarChar(250)")]
		public string Skill1
		{
			get
			{
				return this._Skill1;
			}
			set
			{
				if ((this._Skill1 != value))
				{
					this.OnSkill1Changing(value);
					this.SendPropertyChanging();
					this._Skill1 = value;
					this.SendPropertyChanged("Skill1");
					this.OnSkill1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skill2", DbType="NVarChar(250)")]
		public string Skill2
		{
			get
			{
				return this._Skill2;
			}
			set
			{
				if ((this._Skill2 != value))
				{
					this.OnSkill2Changing(value);
					this.SendPropertyChanging();
					this._Skill2 = value;
					this.SendPropertyChanged("Skill2");
					this.OnSkill2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CV_Recument", Storage="_Recuments", ThisKey="ID", OtherKey="CVID")]
		public EntitySet<Recument> Recuments
		{
			get
			{
				return this._Recuments;
			}
			set
			{
				this._Recuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CV", Storage="_User", ThisKey="IDUser", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CVs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CVs.Add(this);
						this._IDUser = value.ID;
					}
					else
					{
						this._IDUser = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Recuments(Recument entity)
		{
			this.SendPropertyChanging();
			entity.CV = this;
		}
		
		private void detach_Recuments(Recument entity)
		{
			this.SendPropertyChanging();
			entity.CV = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employer")]
	public partial class Employer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UserName;
		
		private string _Password;
		
		private string _Name;
		
		private string _Address;
		
		private string _Email;
		
		private string _Phone;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _Avatar;
		
		private System.Nullable<int> _IDCompany;
		
		private EntitySet<EmployerCreatedCompany> _EmployerCreatedCompanies;
		
		private EntitySet<EmployerCreatedJob> _EmployerCreatedJobs;
		
		private EntityRef<Company> _Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnAvatarChanging(string value);
    partial void OnAvatarChanged();
    partial void OnIDCompanyChanging(System.Nullable<int> value);
    partial void OnIDCompanyChanged();
    #endregion
		
		public Employer()
		{
			this._EmployerCreatedCompanies = new EntitySet<EmployerCreatedCompany>(new Action<EmployerCreatedCompany>(this.attach_EmployerCreatedCompanies), new Action<EmployerCreatedCompany>(this.detach_EmployerCreatedCompanies));
			this._EmployerCreatedJobs = new EntitySet<EmployerCreatedJob>(new Action<EmployerCreatedJob>(this.attach_EmployerCreatedJobs), new Action<EmployerCreatedJob>(this.detach_EmployerCreatedJobs));
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="NVarChar(250)")]
		public string Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCompany", DbType="Int")]
		public System.Nullable<int> IDCompany
		{
			get
			{
				return this._IDCompany;
			}
			set
			{
				if ((this._IDCompany != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCompanyChanging(value);
					this.SendPropertyChanging();
					this._IDCompany = value;
					this.SendPropertyChanged("IDCompany");
					this.OnIDCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employer_EmployerCreatedCompany", Storage="_EmployerCreatedCompanies", ThisKey="ID", OtherKey="EmployerID")]
		public EntitySet<EmployerCreatedCompany> EmployerCreatedCompanies
		{
			get
			{
				return this._EmployerCreatedCompanies;
			}
			set
			{
				this._EmployerCreatedCompanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employer_EmployerCreatedJob", Storage="_EmployerCreatedJobs", ThisKey="ID", OtherKey="EmployerID")]
		public EntitySet<EmployerCreatedJob> EmployerCreatedJobs
		{
			get
			{
				return this._EmployerCreatedJobs;
			}
			set
			{
				this._EmployerCreatedJobs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Employer", Storage="_Company", ThisKey="IDCompany", OtherKey="ID", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Employers.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Employers.Add(this);
						this._IDCompany = value.ID;
					}
					else
					{
						this._IDCompany = default(Nullable<int>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployerCreatedCompanies(EmployerCreatedCompany entity)
		{
			this.SendPropertyChanging();
			entity.Employer = this;
		}
		
		private void detach_EmployerCreatedCompanies(EmployerCreatedCompany entity)
		{
			this.SendPropertyChanging();
			entity.Employer = null;
		}
		
		private void attach_EmployerCreatedJobs(EmployerCreatedJob entity)
		{
			this.SendPropertyChanging();
			entity.Employer = this;
		}
		
		private void detach_EmployerCreatedJobs(EmployerCreatedJob entity)
		{
			this.SendPropertyChanging();
			entity.Employer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployerCreatedCompany")]
	public partial class EmployerCreatedCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployerID;
		
		private int _CompanyID;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<Employer> _Employer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployerIDChanging(int value);
    partial void OnEmployerIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    #endregion
		
		public EmployerCreatedCompany()
		{
			this._Company = default(EntityRef<Company>);
			this._Employer = default(EntityRef<Employer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EmployerID
		{
			get
			{
				return this._EmployerID;
			}
			set
			{
				if ((this._EmployerID != value))
				{
					if (this._Employer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployerIDChanging(value);
					this.SendPropertyChanging();
					this._EmployerID = value;
					this.SendPropertyChanged("EmployerID");
					this.OnEmployerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_EmployerCreatedCompany", Storage="_Company", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.EmployerCreatedCompanies.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.EmployerCreatedCompanies.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employer_EmployerCreatedCompany", Storage="_Employer", ThisKey="EmployerID", OtherKey="ID", IsForeignKey=true)]
		public Employer Employer
		{
			get
			{
				return this._Employer.Entity;
			}
			set
			{
				Employer previousValue = this._Employer.Entity;
				if (((previousValue != value) 
							|| (this._Employer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employer.Entity = null;
						previousValue.EmployerCreatedCompanies.Remove(this);
					}
					this._Employer.Entity = value;
					if ((value != null))
					{
						value.EmployerCreatedCompanies.Add(this);
						this._EmployerID = value.ID;
					}
					else
					{
						this._EmployerID = default(int);
					}
					this.SendPropertyChanged("Employer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployerCreatedJob")]
	public partial class EmployerCreatedJob : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployerID;
		
		private int _JobID;
		
		private EntityRef<Employer> _Employer;
		
		private EntityRef<Job> _Job;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployerIDChanging(int value);
    partial void OnEmployerIDChanged();
    partial void OnJobIDChanging(int value);
    partial void OnJobIDChanged();
    #endregion
		
		public EmployerCreatedJob()
		{
			this._Employer = default(EntityRef<Employer>);
			this._Job = default(EntityRef<Job>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EmployerID
		{
			get
			{
				return this._EmployerID;
			}
			set
			{
				if ((this._EmployerID != value))
				{
					if (this._Employer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployerIDChanging(value);
					this.SendPropertyChanging();
					this._EmployerID = value;
					this.SendPropertyChanged("EmployerID");
					this.OnEmployerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int JobID
		{
			get
			{
				return this._JobID;
			}
			set
			{
				if ((this._JobID != value))
				{
					if (this._Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobIDChanging(value);
					this.SendPropertyChanging();
					this._JobID = value;
					this.SendPropertyChanged("JobID");
					this.OnJobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employer_EmployerCreatedJob", Storage="_Employer", ThisKey="EmployerID", OtherKey="ID", IsForeignKey=true)]
		public Employer Employer
		{
			get
			{
				return this._Employer.Entity;
			}
			set
			{
				Employer previousValue = this._Employer.Entity;
				if (((previousValue != value) 
							|| (this._Employer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employer.Entity = null;
						previousValue.EmployerCreatedJobs.Remove(this);
					}
					this._Employer.Entity = value;
					if ((value != null))
					{
						value.EmployerCreatedJobs.Add(this);
						this._EmployerID = value.ID;
					}
					else
					{
						this._EmployerID = default(int);
					}
					this.SendPropertyChanged("Employer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_EmployerCreatedJob", Storage="_Job", ThisKey="JobID", OtherKey="ID", IsForeignKey=true)]
		public Job Job
		{
			get
			{
				return this._Job.Entity;
			}
			set
			{
				Job previousValue = this._Job.Entity;
				if (((previousValue != value) 
							|| (this._Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job.Entity = null;
						previousValue.EmployerCreatedJobs.Remove(this);
					}
					this._Job.Entity = value;
					if ((value != null))
					{
						value.EmployerCreatedJobs.Add(this);
						this._JobID = value.ID;
					}
					else
					{
						this._JobID = default(int);
					}
					this.SendPropertyChanged("Job");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Experience")]
	public partial class Experience : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CompanyName;
		
		private string _Title;
		
		private System.Nullable<int> _MonthBegin;
		
		private System.Nullable<int> _YearBegin;
		
		private System.Nullable<int> _MonthEnd;
		
		private System.Nullable<int> _YearEnd;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<bool> _Status;
		
		private string _HinhAnh;
		
		private int _UserID;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnMonthBeginChanging(System.Nullable<int> value);
    partial void OnMonthBeginChanged();
    partial void OnYearBeginChanging(System.Nullable<int> value);
    partial void OnYearBeginChanged();
    partial void OnMonthEndChanging(System.Nullable<int> value);
    partial void OnMonthEndChanged();
    partial void OnYearEndChanging(System.Nullable<int> value);
    partial void OnYearEndChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    #endregion
		
		public Experience()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(250)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthBegin", DbType="Int")]
		public System.Nullable<int> MonthBegin
		{
			get
			{
				return this._MonthBegin;
			}
			set
			{
				if ((this._MonthBegin != value))
				{
					this.OnMonthBeginChanging(value);
					this.SendPropertyChanging();
					this._MonthBegin = value;
					this.SendPropertyChanged("MonthBegin");
					this.OnMonthBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearBegin", DbType="Int")]
		public System.Nullable<int> YearBegin
		{
			get
			{
				return this._YearBegin;
			}
			set
			{
				if ((this._YearBegin != value))
				{
					this.OnYearBeginChanging(value);
					this.SendPropertyChanging();
					this._YearBegin = value;
					this.SendPropertyChanged("YearBegin");
					this.OnYearBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthEnd", DbType="Int")]
		public System.Nullable<int> MonthEnd
		{
			get
			{
				return this._MonthEnd;
			}
			set
			{
				if ((this._MonthEnd != value))
				{
					this.OnMonthEndChanging(value);
					this.SendPropertyChanging();
					this._MonthEnd = value;
					this.SendPropertyChanged("MonthEnd");
					this.OnMonthEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearEnd", DbType="Int")]
		public System.Nullable<int> YearEnd
		{
			get
			{
				return this._YearEnd;
			}
			set
			{
				if ((this._YearEnd != value))
				{
					this.OnYearEndChanging(value);
					this.SendPropertyChanging();
					this._YearEnd = value;
					this.SendPropertyChanged("YearEnd");
					this.OnYearEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="NVarChar(250)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Experience", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Experiences.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Experiences.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Job")]
	public partial class Job : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private string _RequestCandidate;
		
		private string _Image;
		
		private System.Nullable<decimal> _Salary;
		
		private System.Nullable<decimal> _SalaryMin;
		
		private System.Nullable<decimal> _SalaryMax;
		
		private string _Details;
		
		private System.Nullable<System.DateTime> _Deadline;
		
		private string _Rank;
		
		private string _Gender;
		
		private string _Experience;
		
		private string _WorkLocation;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _CategoryID;
		
		private System.Nullable<int> _CompanyID;
		
		private System.Nullable<int> _RecumentID;
		
		private System.Nullable<int> _CareerID;
		
		private System.Nullable<int> _UserID;
		
		private EntitySet<EmployerCreatedJob> _EmployerCreatedJobs;
		
		private EntitySet<Recument> _Recuments;
		
		private EntityRef<Career> _Career;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<JobCategory> _JobCategory;
		
		private EntityRef<Recument> _Recument;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnRequestCandidateChanging(string value);
    partial void OnRequestCandidateChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnSalaryChanging(System.Nullable<decimal> value);
    partial void OnSalaryChanged();
    partial void OnSalaryMinChanging(System.Nullable<decimal> value);
    partial void OnSalaryMinChanged();
    partial void OnSalaryMaxChanging(System.Nullable<decimal> value);
    partial void OnSalaryMaxChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    partial void OnDeadlineChanging(System.Nullable<System.DateTime> value);
    partial void OnDeadlineChanged();
    partial void OnRankChanging(string value);
    partial void OnRankChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnExperienceChanging(string value);
    partial void OnExperienceChanged();
    partial void OnWorkLocationChanging(string value);
    partial void OnWorkLocationChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnCategoryIDChanging(System.Nullable<int> value);
    partial void OnCategoryIDChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    partial void OnRecumentIDChanging(System.Nullable<int> value);
    partial void OnRecumentIDChanged();
    partial void OnCareerIDChanging(System.Nullable<int> value);
    partial void OnCareerIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    #endregion
		
		public Job()
		{
			this._EmployerCreatedJobs = new EntitySet<EmployerCreatedJob>(new Action<EmployerCreatedJob>(this.attach_EmployerCreatedJobs), new Action<EmployerCreatedJob>(this.detach_EmployerCreatedJobs));
			this._Recuments = new EntitySet<Recument>(new Action<Recument>(this.attach_Recuments), new Action<Recument>(this.detach_Recuments));
			this._Career = default(EntityRef<Career>);
			this._Company = default(EntityRef<Company>);
			this._JobCategory = default(EntityRef<JobCategory>);
			this._Recument = default(EntityRef<Recument>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestCandidate", DbType="NVarChar(MAX)")]
		public string RequestCandidate
		{
			get
			{
				return this._RequestCandidate;
			}
			set
			{
				if ((this._RequestCandidate != value))
				{
					this.OnRequestCandidateChanging(value);
					this.SendPropertyChanging();
					this._RequestCandidate = value;
					this.SendPropertyChanged("RequestCandidate");
					this.OnRequestCandidateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(250)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salary", DbType="Money")]
		public System.Nullable<decimal> Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this.OnSalaryChanging(value);
					this.SendPropertyChanging();
					this._Salary = value;
					this.SendPropertyChanged("Salary");
					this.OnSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryMin", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SalaryMin
		{
			get
			{
				return this._SalaryMin;
			}
			set
			{
				if ((this._SalaryMin != value))
				{
					this.OnSalaryMinChanging(value);
					this.SendPropertyChanging();
					this._SalaryMin = value;
					this.SendPropertyChanged("SalaryMin");
					this.OnSalaryMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryMax", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SalaryMax
		{
			get
			{
				return this._SalaryMax;
			}
			set
			{
				if ((this._SalaryMax != value))
				{
					this.OnSalaryMaxChanging(value);
					this.SendPropertyChanging();
					this._SalaryMax = value;
					this.SendPropertyChanged("SalaryMax");
					this.OnSalaryMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deadline", DbType="DateTime")]
		public System.Nullable<System.DateTime> Deadline
		{
			get
			{
				return this._Deadline;
			}
			set
			{
				if ((this._Deadline != value))
				{
					this.OnDeadlineChanging(value);
					this.SendPropertyChanging();
					this._Deadline = value;
					this.SendPropertyChanged("Deadline");
					this.OnDeadlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="NVarChar(250)")]
		public string Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(50)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Experience", DbType="NVarChar(100)")]
		public string Experience
		{
			get
			{
				return this._Experience;
			}
			set
			{
				if ((this._Experience != value))
				{
					this.OnExperienceChanging(value);
					this.SendPropertyChanging();
					this._Experience = value;
					this.SendPropertyChanged("Experience");
					this.OnExperienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkLocation", DbType="NVarChar(250)")]
		public string WorkLocation
		{
			get
			{
				return this._WorkLocation;
			}
			set
			{
				if ((this._WorkLocation != value))
				{
					this.OnWorkLocationChanging(value);
					this.SendPropertyChanging();
					this._WorkLocation = value;
					this.SendPropertyChanged("WorkLocation");
					this.OnWorkLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int")]
		public System.Nullable<int> CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._JobCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecumentID", DbType="Int")]
		public System.Nullable<int> RecumentID
		{
			get
			{
				return this._RecumentID;
			}
			set
			{
				if ((this._RecumentID != value))
				{
					if (this._Recument.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecumentIDChanging(value);
					this.SendPropertyChanging();
					this._RecumentID = value;
					this.SendPropertyChanged("RecumentID");
					this.OnRecumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CareerID", DbType="Int")]
		public System.Nullable<int> CareerID
		{
			get
			{
				return this._CareerID;
			}
			set
			{
				if ((this._CareerID != value))
				{
					if (this._Career.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCareerIDChanging(value);
					this.SendPropertyChanging();
					this._CareerID = value;
					this.SendPropertyChanged("CareerID");
					this.OnCareerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_EmployerCreatedJob", Storage="_EmployerCreatedJobs", ThisKey="ID", OtherKey="JobID")]
		public EntitySet<EmployerCreatedJob> EmployerCreatedJobs
		{
			get
			{
				return this._EmployerCreatedJobs;
			}
			set
			{
				this._EmployerCreatedJobs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Recument", Storage="_Recuments", ThisKey="ID", OtherKey="JobID")]
		public EntitySet<Recument> Recuments
		{
			get
			{
				return this._Recuments;
			}
			set
			{
				this._Recuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Career_Job", Storage="_Career", ThisKey="CareerID", OtherKey="ID", IsForeignKey=true)]
		public Career Career
		{
			get
			{
				return this._Career.Entity;
			}
			set
			{
				Career previousValue = this._Career.Entity;
				if (((previousValue != value) 
							|| (this._Career.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Career.Entity = null;
						previousValue.Jobs.Remove(this);
					}
					this._Career.Entity = value;
					if ((value != null))
					{
						value.Jobs.Add(this);
						this._CareerID = value.ID;
					}
					else
					{
						this._CareerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Career");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Job", Storage="_Company", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Jobs.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Jobs.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobCategory_Job", Storage="_JobCategory", ThisKey="CategoryID", OtherKey="ID", IsForeignKey=true)]
		public JobCategory JobCategory
		{
			get
			{
				return this._JobCategory.Entity;
			}
			set
			{
				JobCategory previousValue = this._JobCategory.Entity;
				if (((previousValue != value) 
							|| (this._JobCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobCategory.Entity = null;
						previousValue.Jobs.Remove(this);
					}
					this._JobCategory.Entity = value;
					if ((value != null))
					{
						value.Jobs.Add(this);
						this._CategoryID = value.ID;
					}
					else
					{
						this._CategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("JobCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recument_Job", Storage="_Recument", ThisKey="RecumentID", OtherKey="ID", IsForeignKey=true)]
		public Recument Recument
		{
			get
			{
				return this._Recument.Entity;
			}
			set
			{
				Recument previousValue = this._Recument.Entity;
				if (((previousValue != value) 
							|| (this._Recument.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Recument.Entity = null;
						previousValue.Jobs.Remove(this);
					}
					this._Recument.Entity = value;
					if ((value != null))
					{
						value.Jobs.Add(this);
						this._RecumentID = value.ID;
					}
					else
					{
						this._RecumentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Recument");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Job", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Jobs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Jobs.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployerCreatedJobs(EmployerCreatedJob entity)
		{
			this.SendPropertyChanging();
			entity.Job = this;
		}
		
		private void detach_EmployerCreatedJobs(EmployerCreatedJob entity)
		{
			this.SendPropertyChanging();
			entity.Job = null;
		}
		
		private void attach_Recuments(Recument entity)
		{
			this.SendPropertyChanging();
			entity.Job = this;
		}
		
		private void detach_Recuments(Recument entity)
		{
			this.SendPropertyChanging();
			entity.Job = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobCategory")]
	public partial class JobCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TypeJob;
		
		private EntitySet<Job> _Jobs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeJobChanging(string value);
    partial void OnTypeJobChanged();
    #endregion
		
		public JobCategory()
		{
			this._Jobs = new EntitySet<Job>(new Action<Job>(this.attach_Jobs), new Action<Job>(this.detach_Jobs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeJob", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TypeJob
		{
			get
			{
				return this._TypeJob;
			}
			set
			{
				if ((this._TypeJob != value))
				{
					this.OnTypeJobChanging(value);
					this.SendPropertyChanging();
					this._TypeJob = value;
					this.SendPropertyChanged("TypeJob");
					this.OnTypeJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobCategory_Job", Storage="_Jobs", ThisKey="ID", OtherKey="CategoryID")]
		public EntitySet<Job> Jobs
		{
			get
			{
				return this._Jobs;
			}
			set
			{
				this._Jobs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.JobCategory = this;
		}
		
		private void detach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.JobCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Recument")]
	public partial class Recument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _LetterInfo;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _Status;
		
		private string _Name;
		
		private string _Phone;
		
		private string _Email;
		
		private string _Address;
		
		private System.Nullable<int> _JobID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _CVID;
		
		private EntitySet<Job> _Jobs;
		
		private EntityRef<CV> _CV;
		
		private EntityRef<Job> _Job;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLetterInfoChanging(string value);
    partial void OnLetterInfoChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnJobIDChanging(System.Nullable<int> value);
    partial void OnJobIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnCVIDChanging(System.Nullable<int> value);
    partial void OnCVIDChanged();
    #endregion
		
		public Recument()
		{
			this._Jobs = new EntitySet<Job>(new Action<Job>(this.attach_Jobs), new Action<Job>(this.detach_Jobs));
			this._CV = default(EntityRef<CV>);
			this._Job = default(EntityRef<Job>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LetterInfo", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string LetterInfo
		{
			get
			{
				return this._LetterInfo;
			}
			set
			{
				if ((this._LetterInfo != value))
				{
					this.OnLetterInfoChanging(value);
					this.SendPropertyChanging();
					this._LetterInfo = value;
					this.SendPropertyChanged("LetterInfo");
					this.OnLetterInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobID", DbType="Int")]
		public System.Nullable<int> JobID
		{
			get
			{
				return this._JobID;
			}
			set
			{
				if ((this._JobID != value))
				{
					if (this._Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobIDChanging(value);
					this.SendPropertyChanging();
					this._JobID = value;
					this.SendPropertyChanged("JobID");
					this.OnJobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CVID", DbType="Int")]
		public System.Nullable<int> CVID
		{
			get
			{
				return this._CVID;
			}
			set
			{
				if ((this._CVID != value))
				{
					if (this._CV.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCVIDChanging(value);
					this.SendPropertyChanging();
					this._CVID = value;
					this.SendPropertyChanged("CVID");
					this.OnCVIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recument_Job", Storage="_Jobs", ThisKey="ID", OtherKey="RecumentID")]
		public EntitySet<Job> Jobs
		{
			get
			{
				return this._Jobs;
			}
			set
			{
				this._Jobs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CV_Recument", Storage="_CV", ThisKey="CVID", OtherKey="ID", IsForeignKey=true)]
		public CV CV
		{
			get
			{
				return this._CV.Entity;
			}
			set
			{
				CV previousValue = this._CV.Entity;
				if (((previousValue != value) 
							|| (this._CV.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CV.Entity = null;
						previousValue.Recuments.Remove(this);
					}
					this._CV.Entity = value;
					if ((value != null))
					{
						value.Recuments.Add(this);
						this._CVID = value.ID;
					}
					else
					{
						this._CVID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CV");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Recument", Storage="_Job", ThisKey="JobID", OtherKey="ID", IsForeignKey=true)]
		public Job Job
		{
			get
			{
				return this._Job.Entity;
			}
			set
			{
				Job previousValue = this._Job.Entity;
				if (((previousValue != value) 
							|| (this._Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job.Entity = null;
						previousValue.Recuments.Remove(this);
					}
					this._Job.Entity = value;
					if ((value != null))
					{
						value.Recuments.Add(this);
						this._JobID = value.ID;
					}
					else
					{
						this._JobID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Job");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Recument", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Recuments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Recuments.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.Recument = this;
		}
		
		private void detach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.Recument = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Skill")]
	public partial class Skill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NameSkill;
		
		private System.Nullable<int> _Assessment;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<bool> _Status;
		
		private int _UserID;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameSkillChanging(string value);
    partial void OnNameSkillChanged();
    partial void OnAssessmentChanging(System.Nullable<int> value);
    partial void OnAssessmentChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    #endregion
		
		public Skill()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameSkill", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string NameSkill
		{
			get
			{
				return this._NameSkill;
			}
			set
			{
				if ((this._NameSkill != value))
				{
					this.OnNameSkillChanging(value);
					this.SendPropertyChanging();
					this._NameSkill = value;
					this.SendPropertyChanged("NameSkill");
					this.OnNameSkillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assessment", DbType="Int")]
		public System.Nullable<int> Assessment
		{
			get
			{
				return this._Assessment;
			}
			set
			{
				if ((this._Assessment != value))
				{
					this.OnAssessmentChanging(value);
					this.SendPropertyChanging();
					this._Assessment = value;
					this.SendPropertyChanged("Assessment");
					this.OnAssessmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Skill", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Skills.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Skills.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UserName;
		
		private string _Password;
		
		private string _Name;
		
		private string _Address;
		
		private string _Email;
		
		private string _Phone;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _Avatar;
		
		private System.Nullable<int> _DayOfBirth;
		
		private System.Nullable<int> _MonthOfBirth;
		
		private System.Nullable<int> _YearOfBirth;
		
		private EntitySet<CV> _CVs;
		
		private EntitySet<Experience> _Experiences;
		
		private EntitySet<Job> _Jobs;
		
		private EntitySet<Recument> _Recuments;
		
		private EntitySet<Skill> _Skills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnAvatarChanging(string value);
    partial void OnAvatarChanged();
    partial void OnDayOfBirthChanging(System.Nullable<int> value);
    partial void OnDayOfBirthChanged();
    partial void OnMonthOfBirthChanging(System.Nullable<int> value);
    partial void OnMonthOfBirthChanged();
    partial void OnYearOfBirthChanging(System.Nullable<int> value);
    partial void OnYearOfBirthChanged();
    #endregion
		
		public User()
		{
			this._CVs = new EntitySet<CV>(new Action<CV>(this.attach_CVs), new Action<CV>(this.detach_CVs));
			this._Experiences = new EntitySet<Experience>(new Action<Experience>(this.attach_Experiences), new Action<Experience>(this.detach_Experiences));
			this._Jobs = new EntitySet<Job>(new Action<Job>(this.attach_Jobs), new Action<Job>(this.detach_Jobs));
			this._Recuments = new EntitySet<Recument>(new Action<Recument>(this.attach_Recuments), new Action<Recument>(this.detach_Recuments));
			this._Skills = new EntitySet<Skill>(new Action<Skill>(this.attach_Skills), new Action<Skill>(this.detach_Skills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="NVarChar(250)")]
		public string Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayOfBirth", DbType="Int")]
		public System.Nullable<int> DayOfBirth
		{
			get
			{
				return this._DayOfBirth;
			}
			set
			{
				if ((this._DayOfBirth != value))
				{
					this.OnDayOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DayOfBirth = value;
					this.SendPropertyChanged("DayOfBirth");
					this.OnDayOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthOfBirth", DbType="Int")]
		public System.Nullable<int> MonthOfBirth
		{
			get
			{
				return this._MonthOfBirth;
			}
			set
			{
				if ((this._MonthOfBirth != value))
				{
					this.OnMonthOfBirthChanging(value);
					this.SendPropertyChanging();
					this._MonthOfBirth = value;
					this.SendPropertyChanged("MonthOfBirth");
					this.OnMonthOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearOfBirth", DbType="Int")]
		public System.Nullable<int> YearOfBirth
		{
			get
			{
				return this._YearOfBirth;
			}
			set
			{
				if ((this._YearOfBirth != value))
				{
					this.OnYearOfBirthChanging(value);
					this.SendPropertyChanging();
					this._YearOfBirth = value;
					this.SendPropertyChanged("YearOfBirth");
					this.OnYearOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CV", Storage="_CVs", ThisKey="ID", OtherKey="IDUser")]
		public EntitySet<CV> CVs
		{
			get
			{
				return this._CVs;
			}
			set
			{
				this._CVs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Experience", Storage="_Experiences", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<Experience> Experiences
		{
			get
			{
				return this._Experiences;
			}
			set
			{
				this._Experiences.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Job", Storage="_Jobs", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<Job> Jobs
		{
			get
			{
				return this._Jobs;
			}
			set
			{
				this._Jobs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Recument", Storage="_Recuments", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<Recument> Recuments
		{
			get
			{
				return this._Recuments;
			}
			set
			{
				this._Recuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Skill", Storage="_Skills", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<Skill> Skills
		{
			get
			{
				return this._Skills;
			}
			set
			{
				this._Skills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CVs(CV entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_CVs(CV entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Experiences(Experience entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Experiences(Experience entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Recuments(Recument entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Recuments(Recument entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Skills(Skill entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Skills(Skill entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
}
#pragma warning restore 1591
